!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
BIN	Makefile	/^BIN = .\/bin\/$/;"	m
INC	Makefile	/^INC = .\/inc\/$/;"	m
LIB	Makefile	/^LIB = .\/lib\/$/;"	m
RELAY_A	Makefile	/^RELAY_A = .\/src\/*.a$/;"	m
RELAY_E	Makefile	/^RELAY_E = .\/src\/relay$/;"	m
RELAY_H	Makefile	/^RELAY_H = .\/src\/*.h .\/src\/Raptor\/*.h$/;"	m
SRC	Makefile	/^SRC = .\/src\/$/;"	m
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
DECODE_THREAD_H	inc/decode_thread.h	2;"	d
DEF_H	inc/def.h	2;"	d
K_MAX	inc/def.h	9;"	d
Q	inc/def.h	10;"	d
uint16	inc/def.h	/^typedef unsigned short uint16;$/;"	t
uint32	inc/def.h	/^typedef	unsigned int uint32;$/;"	t
uint8	inc/def.h	/^typedef	unsigned char uint8;$/;"	t
ENCODE_THREAD_H	inc/encode_thread.h	2;"	d
DecodeBuffer_t	inc/global_var.h	/^}DecodeBuffer_t;$/;"	t	typeref:struct:__anon13
DoubleArg_t	inc/global_var.h	/^}DoubleArg_t;$/;"	t	typeref:struct:__anon12
EncodeBuffer_t	inc/global_var.h	/^}EncodeBuffer_t;$/;"	t	typeref:struct:__anon15
F	inc/global_var.h	/^    long F;$/;"	m	struct:FrameHeader_t
FrameHeader_t	inc/global_var.h	/^typedef struct FrameHeader_t{$/;"	s
FrameHeader_t	inc/global_var.h	/^}FrameHeader_t;$/;"	t	typeref:struct:FrameHeader_t
Frame_t	inc/global_var.h	/^}Frame_t;$/;"	t	typeref:struct:__anon14
GLOBAL_VAR_H	inc/global_var.h	2;"	d
K	inc/global_var.h	/^    int K;$/;"	m	struct:FrameHeader_t
MAXBUFSIZE	inc/global_var.h	13;"	d
MAXLINE	inc/global_var.h	12;"	d
R	inc/global_var.h	/^    int R;$/;"	m	struct:FrameHeader_t
SendBuffer_t	inc/global_var.h	/^}SendBuffer_t;$/;"	t	typeref:struct:__anon16
T	inc/global_var.h	/^    int T;$/;"	m	struct:FrameHeader_t
T_MAX	inc/global_var.h	11;"	d
arg1	inc/global_var.h	/^    void *arg1;$/;"	m	struct:__anon12
arg2	inc/global_var.h	/^    void *arg2;$/;"	m	struct:__anon12
buffer	inc/global_var.h	/^	uint8 **buffer;$/;"	m	struct:__anon13
buffer	inc/global_var.h	/^    uint8 *buffer;$/;"	m	struct:__anon14
buffer	inc/global_var.h	/^    uint8 *buffer;$/;"	m	struct:__anon16
cameraNo	inc/global_var.h	/^    int cameraNo;$/;"	m	struct:__anon14
camera_no	inc/global_var.h	/^    int camera_no;$/;"	m	struct:FrameHeader_t
esi	inc/global_var.h	/^    int esi;$/;"	m	struct:FrameHeader_t
frame	inc/global_var.h	/^    Frame_t **frame;$/;"	m	struct:__anon15
frameNo	inc/global_var.h	/^    int frameNo;$/;"	m	struct:__anon14
frame_no	inc/global_var.h	/^    int frame_no;$/;"	m	struct:FrameHeader_t
frame_type	inc/global_var.h	/^    int frame_type;$/;"	m	struct:FrameHeader_t
sem_empty	inc/global_var.h	/^	sem_t sem_empty;$/;"	m	struct:__anon13
sem_empty	inc/global_var.h	/^    sem_t sem_empty;$/;"	m	struct:__anon15
sem_empty	inc/global_var.h	/^    sem_t sem_empty;$/;"	m	struct:__anon16
sem_full	inc/global_var.h	/^	sem_t sem_full;$/;"	m	struct:__anon13
sem_full	inc/global_var.h	/^    sem_t sem_full;$/;"	m	struct:__anon15
sem_full	inc/global_var.h	/^    sem_t sem_full;$/;"	m	struct:__anon16
sig_get	inc/global_var.h	/^	int sig_get;$/;"	m	struct:__anon13
sig_get	inc/global_var.h	/^    int sig_get;$/;"	m	struct:__anon15
sig_get	inc/global_var.h	/^    int sig_get;$/;"	m	struct:__anon16
sig_put	inc/global_var.h	/^	int sig_put;$/;"	m	struct:__anon13
sig_put	inc/global_var.h	/^    int sig_put;$/;"	m	struct:__anon15
sig_put	inc/global_var.h	/^    int sig_put;$/;"	m	struct:__anon16
size	inc/global_var.h	/^    int size;$/;"	m	struct:__anon14
slice_no	inc/global_var.h	/^    long slice_no;$/;"	m	struct:FrameHeader_t
MY_MAIN_H	inc/main.h	2;"	d
LEN_INT	inc/matrix.h	10;"	d
MATRIX_H	inc/matrix.h	2;"	d
Matrix_t	inc/matrix.h	/^}Matrix_t;$/;"	t	typeref:struct:__anon11
colum	inc/matrix.h	/^	uint32 colum;$/;"	m	struct:__anon11
row	inc/matrix.h	/^	uint32 row;$/;"	m	struct:__anon11
rowpoint	inc/matrix.h	/^	uint8 **rowpoint;$/;"	m	struct:__anon11
A_1mat	inc/raptorcode.h	/^	Matrix_t *A_1mat;$/;"	m	struct:__anon10
Amat	inc/raptorcode.h	/^	Matrix_t *Amat;$/;"	m	struct:__anon10
Amat	inc/raptorcode.h	/^    Matrix_t *Amat;$/;"	m	struct:RaptorParam_dec
H	inc/raptorcode.h	/^	uint32 H;$/;"	m	struct:__anon10
H	inc/raptorcode.h	/^    uint32 H;$/;"	m	struct:RaptorParam_dec
K	inc/raptorcode.h	/^	uint32 K;$/;"	m	struct:__anon10
K	inc/raptorcode.h	/^    uint32 K;$/;"	m	struct:RaptorParam_dec
L	inc/raptorcode.h	/^	uint32 L;$/;"	m	struct:__anon10
L	inc/raptorcode.h	/^    uint32 L;$/;"	m	struct:RaptorParam_dec
N	inc/raptorcode.h	/^    uint32 N;$/;"	m	struct:RaptorParam_dec
RAPTORCODE_H	inc/raptorcode.h	2;"	d
RParamDec_t	inc/raptorcode.h	/^}RParamDec_t;$/;"	t	typeref:struct:RaptorParam_dec
RParamEnc_t	inc/raptorcode.h	/^}RParamEnc_t;$/;"	t	typeref:struct:__anon10
RaptorParam_dec	inc/raptorcode.h	/^typedef struct RaptorParam_dec{$/;"	s
S	inc/raptorcode.h	/^	uint32 S;$/;"	m	struct:__anon10
S	inc/raptorcode.h	/^    uint32 S;$/;"	m	struct:RaptorParam_dec
Triple_t	inc/raptorcode.h	/^}Triple_t;$/;"	t	typeref:struct:__anon9
a	inc/raptorcode.h	/^	uint32 a;$/;"	m	struct:__anon9
b	inc/raptorcode.h	/^	uint32 b;$/;"	m	struct:__anon9
d	inc/raptorcode.h	/^	uint8 d;$/;"	m	struct:__anon9
list	inc/raptorcode.h	/^    uint16 *list;$/;"	m	struct:RaptorParam_dec
trp	inc/raptorcode.h	/^	Triple_t *trp;$/;"	m	struct:__anon10
RECV_THREAD_H	inc/recv_thread.h	2;"	d
SEND_THREAD_H	inc/send_thread.h	2;"	d
AR	src/Makefile	/^AR = ar rcu$/;"	m
CC	src/Makefile	/^CC = gcc$/;"	m
CFLAGS	src/Makefile	/^CFLAGS = -I$(INC)  -L$(LIB) -g -lpthread -lrelay -lm -Os -Wall -std=gnu99$/;"	m
INC	src/Makefile	/^INC = .\/$/;"	m
LIB	src/Makefile	/^LIB = .\/$/;"	m
RANLIB	src/Makefile	/^RANLIB = ranlib$/;"	m
RAPTOR_O	src/Makefile	/^RAPTOR_O = Raptor\/matrix.o Raptor\/raptorcode.o$/;"	m
RELAY_A	src/Makefile	/^RELAY_A = librelay.a$/;"	m
RELAY_O	src/Makefile	/^RELAY_O =  recv_thread.o send_thread.o decode_thread.o encode_thread.o$/;"	m
RM	src/Makefile	/^RM = -rm -f$/;"	m
TARGET	src/Makefile	/^TARGET = relay$/;"	m
AR	src/Raptor/Makefile	/^AR = ar rcu$/;"	m
CC	src/Raptor/Makefile	/^CC = gcc$/;"	m
CFLAGS	src/Raptor/Makefile	/^CFLAGS = -I$(INC) -g -c -lm -Os -Wall -std=gnu99$/;"	m
INC	src/Raptor/Makefile	/^INC = .\/$/;"	m
LIB	src/Raptor/Makefile	/^LIB = .\/$/;"	m
RANLIB	src/Raptor/Makefile	/^RANLIB = ranlib$/;"	m
RAPTOR_A	src/Raptor/Makefile	/^RAPTOR_A = $(LIB)libraptor.a$/;"	m
RAPTOR_O	src/Raptor/Makefile	/^RAPTOR_O = matrix.o raptorcode.o$/;"	m
RM	src/Raptor/Makefile	/^RM = -rm -f$/;"	m
DEF_H	src/Raptor/def.h	2;"	d
K_MAX	src/Raptor/def.h	8;"	d
Q	src/Raptor/def.h	9;"	d
uint16	src/Raptor/def.h	/^typedef unsigned short uint16;$/;"	t
uint32	src/Raptor/def.h	/^typedef	unsigned int uint32;$/;"	t
uint8	src/Raptor/def.h	/^typedef	unsigned char uint8;$/;"	t
matrix_equations	src/Raptor/matrix.c	/^int matrix_equations(Matrix_t *A, uint8 *D, uint32 size){$/;"	f
matrix_free	src/Raptor/matrix.c	/^static void matrix_free(uint8 **mat, uint32 size){$/;"	f	file:
matrix_init	src/Raptor/matrix.c	/^int matrix_init(uint32 rownum, uint32 columnum, Matrix_t *mymat){$/;"	f
matrix_inverse	src/Raptor/matrix.c	/^int matrix_inverse(Matrix_t *A, Matrix_t *A_1){$/;"	f
matrix_reset	src/Raptor/matrix.c	/^int matrix_reset(uint32 rownum , uint32 columnum, Matrix_t *mymat){$/;"	f
my_exchange	src/Raptor/matrix.c	/^static void my_exchange(uint8 *x, uint8 *y, uint32 size){$/;"	f	file:
my_xor	src/Raptor/matrix.c	/^static void my_xor(uint8 *x, uint8 *y, uint32 size){  \/\/ ����X^Y, ���������X��$/;"	f	file:
row_exchange	src/Raptor/matrix.c	/^static void row_exchange(uint32 row1, uint32 row2, uint8 **mat,uint32 matsize){$/;"	f	file:
row_or	src/Raptor/matrix.c	/^static void row_or(uint32 row1, uint32 row2, uint8 **mat, uint32 matsize){$/;"	f	file:
row_sub	src/Raptor/matrix.c	/^static void row_sub(uint32 row1, uint32 row2, uint8 **mat, uint32 matsize, uint8 temp1, uint8 temp2){$/;"	f	file:
search_col_1	src/Raptor/matrix.c	/^static uint32 search_col_1(uint8 **mat, uint32 start, uint32 matsize){$/;"	f	file:
LEN_INT	src/Raptor/matrix.h	10;"	d
MATRIX_H	src/Raptor/matrix.h	2;"	d
Matrix_t	src/Raptor/matrix.h	/^}Matrix_t;$/;"	t	typeref:struct:__anon3
colum	src/Raptor/matrix.h	/^	uint32 colum;$/;"	m	struct:__anon3
row	src/Raptor/matrix.h	/^	uint32 row;$/;"	m	struct:__anon3
rowpoint	src/Raptor/matrix.h	/^	uint8 **rowpoint;$/;"	m	struct:__anon3
Deg	src/Raptor/raptorcode.c	/^static uint8 Deg(uint32 v)$/;"	f	file:
H	src/Raptor/raptorcode.c	/^static uint8 const H[]={$/;"	v	file:
J	src/Raptor/raptorcode.c	/^static uint16 const J[] = {0,0,0,0,2,3,0,0,7,1,1,1,3,4,4,3,15,4,0,0,2,2,3,8,3,1,4,0,4,2,2,2,3,3,7,1,1,4,16,2,1,1,2,9,4,1,1,4,4,3,3,5,2,0,0,2,2,7,6,13,6,4,2,6,7,14,6,9,2,3,23,0,4,7,0,2,7,0,7,3,9,11,7,7,4,3,8,4,3,4,19,15,3,9,9,3,9,30,$/;"	v	file:
L1	src/Raptor/raptorcode.c	/^static uint16 const L1[]={1,7,11,11,17,17,17,23,23,23,23,29,29,29,29,29,37,37,37,37,41,41,41,41,43,47,47,47,47,53,53,53,53,53,53,59,59,59,59,59,59,61,61,67,67,67,67,71,71,71,71,73,73,79,$/;"	v	file:
M	src/Raptor/raptorcode.c	/^static uint16 const M[500][16] = {$/;"	v	file:
Rand	src/Raptor/raptorcode.c	/^static uint32 Rand(uint32 x,uint32 i,uint32 m)$/;"	f	file:
S	src/Raptor/raptorcode.c	/^static uint8 const S[]={0,2,3,3,5,5,5,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,$/;"	v	file:
V0	src/Raptor/raptorcode.c	/^static uint32 const V0[]={251291136, 3952231631, 3370958628, 4070167936, 123631495, 3351110283,3218676425, 2011642291, 774603218, 2402805061, 1004366930,$/;"	v	file:
V1	src/Raptor/raptorcode.c	/^static uint32 const V1[]={807385413, 2043073223, 3336749796, 1302105833, 2278607931, 541015020,1684564270, 372709334, 3508252125, 1768346005, 1270451292,$/;"	v	file:
d	src/Raptor/raptorcode.c	/^static uint8 const d[] = {0,1,2,3,4,5,8,9,16,19};$/;"	v	file:
f	src/Raptor/raptorcode.c	/^static uint32 const f[] = {0,62914,581959,749731,833617,886046,924844,945815,987758,1048576};$/;"	v	file:
gray_m	src/Raptor/raptorcode.c	/^static uint16 gray_m(uint32 j, uint32 k)$/;"	f	file:
min	src/Raptor/raptorcode.c	896;"	d	file:
my_xor	src/Raptor/raptorcode.c	/^static void my_xor(uint8 *x, uint8 *y, uint32 size)$/;"	f	file:
raptor_decode	src/Raptor/raptorcode.c	/^int raptor_decode(RParamDec_t *para, uint8 *input, uint8 *output_return, uint32 T)$/;"	f
raptor_encode	src/Raptor/raptorcode.c	/^int raptor_encode(RParamEnc_t *para, uint32 R, uint8 *input, uint8 *intermediate, uint8 *output, uint32 size)$/;"	f
raptor_free	src/Raptor/raptorcode.c	/^void raptor_free(void *arg, int opt)$/;"	f
raptor_free_d	src/Raptor/raptorcode.c	/^static void raptor_free_d(void *arg)$/;"	f	file:
raptor_free_e	src/Raptor/raptorcode.c	/^static void raptor_free_e(void *arg){$/;"	f	file:
raptor_getH_d	src/Raptor/raptorcode.c	/^static void raptor_getH_d(RParamDec_t *para)$/;"	f	file:
raptor_getH_e	src/Raptor/raptorcode.c	/^static void raptor_getH_e(RParamEnc_t *para)$/;"	f	file:
raptor_getLDPC_d	src/Raptor/raptorcode.c	/^static void raptor_getLDPC_d(RParamDec_t *para)$/;"	f	file:
raptor_getLDPC_e	src/Raptor/raptorcode.c	/^static void raptor_getLDPC_e(RParamEnc_t *para)$/;"	f	file:
raptor_getLT_d	src/Raptor/raptorcode.c	/^static void raptor_getLT_d(RParamDec_t *para)$/;"	f	file:
raptor_getLT_e	src/Raptor/raptorcode.c	/^static void raptor_getLT_e(RParamEnc_t *para)$/;"	f	file:
raptor_init	src/Raptor/raptorcode.c	/^void *raptor_init(uint32 k, uint32 n, void *arg, int opt)$/;"	f
raptor_init_d	src/Raptor/raptorcode.c	/^static void *raptor_init_d(uint32 k, uint32 n, void *arg)$/;"	f	file:
raptor_init_e	src/Raptor/raptorcode.c	/^static void *raptor_init_e(uint32 k, uint32 n, void *arg)$/;"	f	file:
raptor_intermediate_d	src/Raptor/raptorcode.c	/^static void raptor_intermediate_d(RParamDec_t *para)$/;"	f	file:
raptor_intermediate_e	src/Raptor/raptorcode.c	/^static int raptor_intermediate_e(RParamEnc_t *para)$/;"	f	file:
raptor_reset	src/Raptor/raptorcode.c	/^int raptor_reset(uint32 k, void *para, int opt)$/;"	f
raptor_reset_d	src/Raptor/raptorcode.c	/^static int raptor_reset_d(uint32 k, void *arg)$/;"	f	file:
raptor_reset_e	src/Raptor/raptorcode.c	/^static int raptor_reset_e(uint32 k, void *arg)$/;"	f	file:
trip	src/Raptor/raptorcode.c	/^static void trip(uint32 K, uint32 X, Triple_t *trp)$/;"	f	file:
A_1mat	src/Raptor/raptorcode.h	/^	Matrix_t *A_1mat;$/;"	m	struct:__anon2
Amat	src/Raptor/raptorcode.h	/^	Matrix_t *Amat;$/;"	m	struct:__anon2
Amat	src/Raptor/raptorcode.h	/^    Matrix_t *Amat;$/;"	m	struct:RaptorParam_dec
H	src/Raptor/raptorcode.h	/^	uint32 H;$/;"	m	struct:__anon2
H	src/Raptor/raptorcode.h	/^    uint32 H;$/;"	m	struct:RaptorParam_dec
K	src/Raptor/raptorcode.h	/^	uint32 K;$/;"	m	struct:__anon2
K	src/Raptor/raptorcode.h	/^    uint32 K;$/;"	m	struct:RaptorParam_dec
L	src/Raptor/raptorcode.h	/^	uint32 L;$/;"	m	struct:__anon2
L	src/Raptor/raptorcode.h	/^    uint32 L;$/;"	m	struct:RaptorParam_dec
N	src/Raptor/raptorcode.h	/^    uint32 N;$/;"	m	struct:RaptorParam_dec
RAPTORCODE_H	src/Raptor/raptorcode.h	2;"	d
RParamDec_t	src/Raptor/raptorcode.h	/^}RParamDec_t;$/;"	t	typeref:struct:RaptorParam_dec
RParamEnc_t	src/Raptor/raptorcode.h	/^}RParamEnc_t;$/;"	t	typeref:struct:__anon2
RaptorParam_dec	src/Raptor/raptorcode.h	/^typedef struct RaptorParam_dec{$/;"	s
S	src/Raptor/raptorcode.h	/^	uint32 S;$/;"	m	struct:__anon2
S	src/Raptor/raptorcode.h	/^    uint32 S;$/;"	m	struct:RaptorParam_dec
Triple_t	src/Raptor/raptorcode.h	/^}Triple_t;$/;"	t	typeref:struct:__anon1
a	src/Raptor/raptorcode.h	/^	uint32 a;$/;"	m	struct:__anon1
b	src/Raptor/raptorcode.h	/^	uint32 b;$/;"	m	struct:__anon1
d	src/Raptor/raptorcode.h	/^	uint8 d;$/;"	m	struct:__anon1
list	src/Raptor/raptorcode.h	/^    uint16 *list;$/;"	m	struct:RaptorParam_dec
trp	src/Raptor/raptorcode.h	/^	Triple_t *trp;$/;"	m	struct:__anon2
decode_func	src/decode_thread.c	/^int decode_func(DecodeBuffer_t *decodeBuf, EncodeBuffer_t *encodeBuf)$/;"	f
decode_thread	src/decode_thread.c	/^static void *decode_thread(void *arg)$/;"	f	file:
DECODE_THREAD_H	src/decode_thread.h	2;"	d
encode_func	src/encode_thread.c	/^int encode_func(EncodeBuffer_t *encodeBuf, SendBuffer_t *sendBuf)$/;"	f
encode_thread	src/encode_thread.c	/^static void *encode_thread(void *arg)$/;"	f	file:
ENCODE_THREAD_H	src/encode_thread.h	2;"	d
DecodeBuffer_t	src/global_var.h	/^}DecodeBuffer_t;$/;"	t	typeref:struct:__anon5
DoubleArg_t	src/global_var.h	/^}DoubleArg_t;$/;"	t	typeref:struct:__anon4
EncodeBuffer_t	src/global_var.h	/^}EncodeBuffer_t;$/;"	t	typeref:struct:__anon7
F	src/global_var.h	/^	long F;$/;"	m	struct:FrameHeader_t
FrameHeader_t	src/global_var.h	/^typedef struct FrameHeader_t$/;"	s
FrameHeader_t	src/global_var.h	/^}FrameHeader_t;$/;"	t	typeref:struct:FrameHeader_t
Frame_t	src/global_var.h	/^}Frame_t;$/;"	t	typeref:struct:__anon6
GLOBAL_VAR_H	src/global_var.h	2;"	d
K	src/global_var.h	/^	int K;$/;"	m	struct:FrameHeader_t
MAXBUFSIZE	src/global_var.h	26;"	d
MAXLINE	src/global_var.h	25;"	d
R	src/global_var.h	/^	int R;$/;"	m	struct:FrameHeader_t
SendBuffer_t	src/global_var.h	/^}SendBuffer_t;$/;"	t	typeref:struct:__anon8
T	src/global_var.h	/^	int T;$/;"	m	struct:FrameHeader_t
T_MAX	src/global_var.h	24;"	d
arg1	src/global_var.h	/^	void *arg1;$/;"	m	struct:__anon4
arg2	src/global_var.h	/^	void *arg2;$/;"	m	struct:__anon4
buffer	src/global_var.h	/^	uint8 **buffer;$/;"	m	struct:__anon5
buffer	src/global_var.h	/^	uint8 *buffer;$/;"	m	struct:__anon6
buffer	src/global_var.h	/^	uint8 *buffer;$/;"	m	struct:__anon8
cameraNo	src/global_var.h	/^	int cameraNo;$/;"	m	struct:__anon6
camera_no	src/global_var.h	/^	int camera_no;$/;"	m	struct:FrameHeader_t
esi	src/global_var.h	/^	int esi;$/;"	m	struct:FrameHeader_t
frame	src/global_var.h	/^	Frame_t **frame;$/;"	m	struct:__anon7
frameNo	src/global_var.h	/^	int frameNo;$/;"	m	struct:__anon6
frame_no	src/global_var.h	/^	int frame_no;$/;"	m	struct:FrameHeader_t
frame_type	src/global_var.h	/^	int frame_type;$/;"	m	struct:FrameHeader_t
sem_empty	src/global_var.h	/^	sem_t sem_empty;$/;"	m	struct:__anon5
sem_empty	src/global_var.h	/^	sem_t sem_empty;$/;"	m	struct:__anon7
sem_empty	src/global_var.h	/^	sem_t sem_empty;$/;"	m	struct:__anon8
sem_full	src/global_var.h	/^	sem_t sem_full;$/;"	m	struct:__anon5
sem_full	src/global_var.h	/^	sem_t sem_full;$/;"	m	struct:__anon7
sem_full	src/global_var.h	/^	sem_t sem_full;$/;"	m	struct:__anon8
sig_get	src/global_var.h	/^	int sig_get;$/;"	m	struct:__anon5
sig_get	src/global_var.h	/^	int sig_get;$/;"	m	struct:__anon7
sig_get	src/global_var.h	/^	int sig_get;$/;"	m	struct:__anon8
sig_put	src/global_var.h	/^	int sig_put;$/;"	m	struct:__anon5
sig_put	src/global_var.h	/^	int sig_put;$/;"	m	struct:__anon7
sig_put	src/global_var.h	/^	int sig_put;$/;"	m	struct:__anon8
size	src/global_var.h	/^	int size;$/;"	m	struct:__anon6
slice_no	src/global_var.h	/^	long slice_no;$/;"	m	struct:FrameHeader_t
decode_malloc	src/main.c	/^void *decode_malloc(int buf_num, int buf_len)$/;"	f
encode_malloc	src/main.c	/^void *encode_malloc(int buf_num, int buf_len)$/;"	f
main	src/main.c	/^int main(int argc, char *argv[])$/;"	f
send_malloc	src/main.c	/^void *send_malloc(int buf_num, int buf_len)$/;"	f
MY_MAIN_H	src/main.h	2;"	d
recv_func	src/recv_thread.c	/^int recv_func(uint8 *IP, int Port, DecodeBuffer_t *decodeBuf)$/;"	f
recv_thread	src/recv_thread.c	/^static void *recv_thread(void *arg)$/;"	f	file:
RECV_THREAD_H	src/recv_thread.h	2;"	d
send_func	src/send_thread.c	/^int send_func(uint8_t *IP, int Port, SendBuffer_t *sendBuf)$/;"	f
send_thread	src/send_thread.c	/^static void *send_thread(void *arg)$/;"	f	file:
SEND_THREAD_H	src/send_thread.h	2;"	d
